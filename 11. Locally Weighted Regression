Aim:
To implement the non-parametric Locally Weighted Regression (LWR) algorithm in Python to fit data points using values stored in a .csv file and visualize the result with a graph.

---

Algorithm (Short):
1. Load dataset from CSV.
2. Add bias term to input x.
3. For each input point, compute weights based on distance (Gaussian kernel).
4. Compute prediction using weighted linear regression.
5. Plot original and fitted values.

---

Dataset â€“ Save as LWR.csv:

TotalBill,Tip
7.25,1.0
8.15,1.2
9.35,1.5
10.00,1.7
11.10,2.1
12.30,2.3
13.50,2.6
14.75,2.8
16.00,3

---

Python Program:

import numpy as np, pandas as pd, matplotlib.pyplot as plt

d = pd.read_csv("LWR.csv")
X, y = d.TotalBill.values, d.Tip.values
Xb = np.c_[np.ones(len(X)), X]

def lwr(xq, t=1):
    W = np.diag(np.exp(-((X - xq)**2)/(2*t**2)))
    return [1, xq] @ np.linalg.pinv(Xb.T @ W @ Xb) @ Xb.T @ W @ y

xr = np.linspace(X.min(), X.max(), 100)
plt.scatter(X, y)
plt.plot(xr, [lwr(x) for x in xr], 'r')
plt.show()

---

Output:

A plot will appear:
Blue dots represent original data points.
Red curve shows the smoothed fit generated by the LWR algorithm.

---

Result:
The Locally Weighted Regression model was successfully implemented. It fit the curve to the given dataset and visualized how predictions vary locally with respect to the input.
